# Build stage
FROM rust:1.86 AS builder

WORKDIR /usr/src/app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y pkg-config libssl-dev build-essential && \
    rm -rf /var/lib/apt/lists/*

# Copy manifest files for dependency caching
COPY Cargo.toml Cargo.lock ./

# Copy the real source code
COPY src/ ./src/
COPY database/ ./database/
COPY tests/ ./tests/

# Build the final applications - pre-build them instead of building at runtime
RUN cargo build --bin load_pools --release

# Runtime stage
FROM ubuntu:22.04

WORKDIR /app

# Install runtime dependencies including PostgreSQL client for database checks
RUN apt-get update && \
    apt-get install -y ca-certificates postgresql-client && \
    rm -rf /var/lib/apt/lists/*

# Create necessary directory structure
RUN mkdir -p /app/database/schema/common /app/database/schema/orca /app/database/schema/raydium

# Copy the built executables
COPY --from=builder /usr/src/app/target/release/load_pools /app/
RUN chmod +x /app/load_pools 

# Copy the Docker-optimized scripts
COPY database/load_pools_docker.sh /app/
RUN chmod +x /app/load_pools_docker.sh

# Copy the schema directory structure
COPY --from=builder /usr/src/app/database/schema/common/ /app/database/schema/common/
COPY --from=builder /usr/src/app/database/schema/orca/ /app/database/schema/orca/
COPY --from=builder /usr/src/app/database/schema/raydium/ /app/database/schema/raydium/

# Set environment variables with default values
ENV DATABASE_URL=postgres://postgres:postgres@localhost:5432/postgres
ENV DATABASE_MAX_CONNECTIONS=5
ENV DATABASE_CONNECT_TIMEOUT=30
ENV SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
ENV SOLANA_WS_URL=wss://api.mainnet-beta.solana.com
ENV DEX_TYPE=all

# Use the combined initialization script as the entrypoint
ENTRYPOINT ["/app/load_pools_docker.sh"]

# Use 'all' as the default DEX type if none is provided
CMD ["all"]