# Build stage
FROM rust:1.84 AS builder

WORKDIR /usr/src/app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y pkg-config libssl-dev build-essential && \
    rm -rf /var/lib/apt/lists/*

# Copy manifest files for dependency caching
COPY Cargo.toml Cargo.lock ./

# Copy the real source code
COPY src/ ./src/
COPY database/ ./database/
COPY tests/ ./tests/

# Build the final application
RUN cargo build --bin indexer --release

# Runtime stage
FROM ubuntu:22.04

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Copy the built executable
COPY --from=builder /usr/src/app/target/release/indexer /app/indexer
RUN chmod +x /app/indexer

# Create a small wrapper script that handles DEX_TYPE
RUN echo '#!/bin/bash\n\
DEX_TYPE=${DEX_TYPE:-orca}\n\
exec /app/indexer --rpc-url "$SOLANA_RPC_URL" --ws-url "$SOLANA_WS_URL" "$DEX_TYPE" "$@"' > /app/start.sh && \
    chmod +x /app/start.sh

# Set environment variables with default values
ENV DATABASE_URL=postgres://postgres:postgres@localhost:5432/postgres
ENV DATABASE_MAX_CONNECTIONS=5
ENV DATABASE_CONNECT_TIMEOUT=30
ENV SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
ENV SOLANA_WS_URL=wss://api.mainnet-beta.solana.com
ENV DEX_TYPE=orca

RUN ls -la /app

# Use the wrapper script as the entrypoint
ENTRYPOINT ["/app/start.sh"]
# No CMD needed as the DEX_TYPE is handled in the wrapper script